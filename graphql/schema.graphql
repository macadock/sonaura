### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Category {
  icon: String
  id: String
  name: String
  products: [Product]
  slug: String
}

input CreateCategoryInput {
  icon: String!
  name: String!
  slug: String!
}

input CreateProductInput {
  categoryId: String!
  description: String!
  fromPrice: Int
  mainAsset: String!
  name: String!
  price: Int
  quantity: Int
  shopId: String
  slug: String!
}

input CreateShopInput {
  address: String!
  city: String!
  country: String!
  email: String!
  googleMapsUrl: String!
  image: String!
  openHours: JSONObject
  phoneNumber: String!
  postalCode: String!
}

input CreateVariantsInput {
  productId: String!
  type: VariantType!
  uniqueName: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!): Category
  createProduct(createProductInput: CreateProductInput!): Product
  createShop(createShopInput: CreateShopInput!): Shop
  createVariant(createVariantInput: CreateVariantsInput!): Variant
  deleteCategory(id: String!): Category
  deleteProduct(id: String!): Product
  deleteShop(id: String!): Shop
  deleteVariant(id: String!): Variant
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category
  updateProduct(updateProductInput: UpdateProductInput!): Product
  updateShop(updateShopInput: UpdateShopInput!): Shop
  updateVariant(updateVariantInput: UpdateVariantsInput!): Variant
}

type Product {
  category: Category
  description: String
  fromPrice: Int
  id: String
  mainAsset: String
  name: String
  price: Int
  quantity: Int
  shop: Shop
  slug: String
  variants: [Variant]
}

type Query {
  categories: [Category]
  categoryById(id: String!): Category
  categoryBySlug(slug: String!): Category
  productById(id: String!): Product
  productByIds(ids: [String]!): [Product]
  productBySlug(slug: String!): Product
  products: [Product]
  shopById(id: String!): Shop
  shops: [Shop]
  variantsByProductId(id: String!): [Variant]
}

type Shop {
  address: String
  city: String
  country: String
  email: String
  googleMapsUrl: String
  id: String
  image: String
  openHours: JSONObject
  phoneNumber: String
  postalCode: String
}

input UpdateCategoryInput {
  icon: String
  id: String!
  name: String
  slug: String
}

input UpdateProductInput {
  categoryId: String
  description: String
  fromPrice: Int
  id: String!
  mainAsset: String
  name: String
  price: Int
  quantity: Int
  shopId: String
  slug: String
}

input UpdateShopInput {
  address: String
  city: String!
  country: String
  email: String
  googleMapsUrl: String
  id: String!
  image: String
  openHours: JSONObject
  phoneNumber: String
  postalCode: String
}

input UpdateVariantsInput {
  type: VariantType!
  uniqueName: String
  variantId: String!
}

type Variant {
  id: String
  type: VariantType
  uniqueName: String
  values: [VariantValue]
}

enum VariantType {
  COLOR
  TEXT
}

type VariantValue {
  colorHex: String
  id: String
  value: String
}
